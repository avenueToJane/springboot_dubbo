<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.springboot</groupId>
  <artifactId>springboot-parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <modules>
  	<module>springboot-beans</module>
  	<module>springboot-dao</module>
  	<module>springboot-iservice</module>
  	<module>springboot-iservice-impl</module>
  	<module>springboot-utils</module>
  	<module>springboot-web</module>
  </modules>
  
<!-- 一个项目使用Spring Boot框架，就是在pom文件集成Spring Boot 父级依赖
它用来提供相关的 Maven 默认依赖，使用它之后，常用的包依赖可以省去 version 标签 -->

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.7.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

   	<!-- 设置我们项目的一些版本属性 -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<dubbo.version>2.5.5</dubbo.version>
		<zkclient.version>0.10</zkclient.version>
		<lombok.version>1.16.18</lombok.version>
		<spring-boot.version>1.5.7.RELEASE</spring-boot.version>
		<druid.version>1.1.3</druid.version>
        <mybatis.boot.starter.version>1.3.1</mybatis.boot.starter.version>
        <mysql.connector.java.version>5.1.44</mysql.connector.java.version>
        <spring.boot.starter.log4j.version>1.3.8.RELEASE</spring.boot.starter.log4j.version>
	</properties>

	<!-- 在parent项目pom.xml中建立依赖管理（dependencyManagement） 方便我们的依赖版本管理 -->
	<dependencyManagement>
		<dependencies>
			<!-- Springboot依赖 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<!-- Springboot-web依赖 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<!-- 使用lombok实现JavaBean的get、set、toString、hashCode、equals等方法的自动生成 -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- Dubbo依赖 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>dubbo</artifactId>
				<version>${dubbo.version}</version>
			</dependency>

			<!-- zookeeper的客户端依赖 -->
			<dependency>
				<groupId>com.101tec</groupId>
				<artifactId>zkclient</artifactId>
				<version>${zkclient.version}</version>
			</dependency>
			
			<dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.boot.starter.version}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.connector.java.version}</version>
            </dependency>
            
            <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j</artifactId>
			<version>${spring.boot.starter.log4j.version}</version>
		</dependency>
			
		</dependencies>
	</dependencyManagement>
</project>